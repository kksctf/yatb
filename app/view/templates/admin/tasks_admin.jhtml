{% extends "admin/base.jhtml" %}
{% import "admin/macro.jhtml" as a_macro with context %}
{% import "macro.jhtml" as macro with context %}

{% block header %}
    {% set header_data.yatb_logo_text = "TASKS ADMIN" %}
    {{ super() }}
{% endblock %}

{% block content %}
    <div class="container">
        <div class="mb-3">
            {% if not selected_task %}
                {{ a_macro.generate_form(
                    task_form_class.schema(),
                    form_id="task_create_form",
                    overrides = {
                        "description": "textarea",
                        "scoring": "class",
			            "flag": "class",
                    },
                    attribs={
                        "scoring": {
                            "classtype": ["readonly"]
                        },
			            "flag":{
			                "classtype": ["readonly"]
			            }	                   
		            })
                }}
            {% else %}
                {{ a_macro.generate_form(
                    task_class.schema(),
                    form_id="task_edit_form",
                    values=selected_task.dict(),
                    overrides = {
                        "description": "textarea",
                        "scoring": "class",
                        'description_html': 'html',
                        "flag": "class",
                    },
                    attribs={
                        'task_id':  ['readonly'],
                        "scoring": {
                            "classtype": ["readonly"]
                        },
			            "flag":{
			                "classtype": ["readonly"]
			            }	
                    })
                }}
            {% endif %}
        </div>
        <hr>
        <button class="btn btn-danger mx-1 inverse_hidden_button">Inverse hidden</button>
        <button class="btn btn-danger mx-1 decay_edit_button">Inverse hidden</button>
        {# <form id="task_bulk_select"> #}
            <table class="table">
                <thead>
                    <tr>
                        <th scope="col"> <input type="checkbox" id="mass_checkbox_checkbox" class="form_class_disabled"> </th>
                        <th scope="col">Task name</th>
                        <th scope="col">Category</th>
                        <th scope="col">Points</th>
                        <th scope="col">Solve Count</th>
                        <th scope="col">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    {% for task in tasks_list %}
                        <tr>
                            <th> <input type="checkbox" class="task_checkbox" name="tasks" value="{{ task.task_id }}"> </th>
                            <th>{{ task.task_name }}</th>
                            <td>{{ task.category }}</td>
                            <td>{{ task.scoring.points }} {{ 'HIDDEN' if task.hidden else '' }}</td>
                            <td>{{ len(task.pwned_by) }}</td>
                            <td>
                                <a class="btn btn-primary mx-1 tasks_button_edit" data-id="{{ task.task_id }}" href="{{ url_for('admin_task_get', task_id=task.task_id) }}">Edit</a>
                                <button class="btn btn-danger mx-1 tasks_button_unsolve" data-id="{{ task.task_id }}">Unsolve</button>
                                <button class="btn btn-danger mx-1 tasks_button_delete" data-id="{{ task.task_id }}">Delete (Удаление таска с солвами убивает всё нахуй)</button>
                            </td>
                        </tr>
                    {% endfor %}
                </tbody>
            </table>
        {# </form> #}
    </div>
{% endblock %}

{% block scripts %}
    {# TODO: this is a little whack to make url_for and fastapi happy, but think about making this nice #}
    {{ super() }}
    <script>
        $(document).ready(function x() {
            $.ajax({
                type: "GET",
                url: api_list['api_admin_tasks'],
                success: function(data) {
                    console.log("OnSucc", data);
                },
            });

            easy_mde_runner($('textarea[name=description]')[0], "{{ selected_task.task_id if selected_task else 'draft' }}");
            //$('textarea[name=description]')[0].required = false;

            $("#task_create_form").submit(function(event) {
                event.preventDefault();
                req(api_list["api_admin_task_create"], { data: getFormData(this), })
                    .then(get_json)
                    .then(ok_toast_generator("Create task"), nok_toast_generator("Create task"))
            });

            $("#task_edit_form").submit(function(event) {
                event.preventDefault();
                preq(api_list["api_admin_task_edit"], {"task_id": "{{ selected_task.task_id if selected_task else None }}"}, { data: getFormData(this), })
                    .then(get_json)
                    .then(ok_toast_generator("Edit task"), nok_toast_generator("Edit task"))
            });

            $(".tasks_button_delete").click(function(event) {
                id = $(this).data("id");
                check = prompt("Для подтверждения операции введите yes", "");
                if(check == "yes") {
                    preq(api_list["api_admin_task_delete"], { "task_id": id}, { method: "GET"})
                        .then(get_json)
                        .then(ok_toast_generator("Delete task"), nok_toast_generator("Delete task"));
                }
                else {
                    nok_toast_generator("Delete task")("Галя, отмена");
                }
            });

            $(".tasks_button_unsolve").click(function(event) {
                id = $(this).data("id");
                check = prompt("Для подтверждения операции введите yes", "");
                if(check == "yes") {
                    preq(api_list["api_admin_task_unsolve"], {"task_id": id}, { method: "GET"})
                        .then(get_json)
                        .then(ok_toast_generator("Unsolve task"), nok_toast_generator("Unsolve task"));
                } else {
                    nok_toast_generator("Unsolve task")("Галя, отмена");
                }
            });

            /*$("#task_bulk_select").submit(function(event) {
                event.preventDefault();
                api_req(this, api_url['bulk_unhide'], 'Bulk unhide');
            });*/

            $("#mass_checkbox_checkbox").click(function(event) {
                if($(this).is(':checked'))
                    $('.task_checkbox').prop('checked', true);
                else
                    $('.task_checkbox').prop('checked', false);
            });

            init_form_class();
        });
    </script>
{% endblock %}

{% block footer %}
    {{ super() }}
{% endblock %}
