{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to YATB Docs YATB - yet another fast and furious jeopardy-CTF taskboard Features out-of-the-box Flexible auth system with OAuth2 support Flexible flags and scoring system OpenAPI schema and swagger UI - easy to integrate API Extremly simple: you can modificate in any imagniable way Telegram notifications for first blood Blazing :) fast! How to start Clone repo Fix event datetime: Open app/config.py , setup EVENT_START_TIME and EVENT_END_TIME . Theese dates MUST be in UTC. or in yatb.env . Copy yatb.example.env to yatb.env , change next values: tokens: 1. JWT_SECRET_KEY - secret key for JWT cookie sign 2. API_TOKEN - token for automated usage of admin API 3. WS_API_TOKEN - token for admin WS 4. FLAG_SIGN_KEY - flag sign key FLAG_BASE - flag base (part before brackets), i.e. for flag kks{example_flag} flag base is kks . CTF_NAME - CTF name for frontend Setup auth ways: 1. Fill ENABLED_AUTH_WAYS list with enabled auth ways, for example, ENABLED_AUTH_WAYS='[\"TelegramAuth\", \"SimpleAuth\"]' 2. Fill select auth way settings. For reference, see more about auth ways configs More about config Change logos in app/view/static docker-compose up -d --build If you setup any reverse proxy before YATB nginx, you should change proxy_set_header X-Forwarded-Proto $scheme; line in nginx/yatb.conf : comment entire line or replace $scheme; with https . Stack FastAPI Pydantic Jinja Bootstrap","title":"YATB"},{"location":"#welcome-to-yatb-docs","text":"YATB - yet another fast and furious jeopardy-CTF taskboard","title":"Welcome to YATB Docs"},{"location":"#features-out-of-the-box","text":"Flexible auth system with OAuth2 support Flexible flags and scoring system OpenAPI schema and swagger UI - easy to integrate API Extremly simple: you can modificate in any imagniable way Telegram notifications for first blood Blazing :) fast!","title":"Features out-of-the-box"},{"location":"#how-to-start","text":"Clone repo Fix event datetime: Open app/config.py , setup EVENT_START_TIME and EVENT_END_TIME . Theese dates MUST be in UTC. or in yatb.env . Copy yatb.example.env to yatb.env , change next values: tokens: 1. JWT_SECRET_KEY - secret key for JWT cookie sign 2. API_TOKEN - token for automated usage of admin API 3. WS_API_TOKEN - token for admin WS 4. FLAG_SIGN_KEY - flag sign key FLAG_BASE - flag base (part before brackets), i.e. for flag kks{example_flag} flag base is kks . CTF_NAME - CTF name for frontend Setup auth ways: 1. Fill ENABLED_AUTH_WAYS list with enabled auth ways, for example, ENABLED_AUTH_WAYS='[\"TelegramAuth\", \"SimpleAuth\"]' 2. Fill select auth way settings. For reference, see more about auth ways configs More about config Change logos in app/view/static docker-compose up -d --build If you setup any reverse proxy before YATB nginx, you should change proxy_set_header X-Forwarded-Proto $scheme; line in nginx/yatb.conf : comment entire line or replace $scheme; with https .","title":"How to start"},{"location":"#stack","text":"FastAPI Pydantic Jinja Bootstrap","title":"Stack"},{"location":"config/","text":"YATB Config Setup config stored in app/config.py file .env Always populated from yatb.env , or from enviroment. Main settings Debug DEBUG : enable/disable debug mode. Should be off on production PROFILING : enable/disable profiling. Enables ?profile=true query param for viewing PyInstrument output Event timing EVENT_START_TIME / EVENT_END_TIME : dates of event start and end. MUST be in UTC and offset-aware. DB Data DB_NAME : name of database MONGO : DSN for connecting to mongodb instance Must be changed JWT_SECRET_KEY - secret key for JWT cookie signing. FLAG_SIGN_KEY - the same, but for dynamic flags. API_TOKEN - token for accessing admin API without admin user / auth. WS_API_TOKEN - token for acessing admin WS subscription API. CTF Customization FLAG_BASE - base for flags (i.e. part before brackets), for example: kks for flags like kks{example_flag} CTF_NAME - ctf name to be displayed on front Auth ways Note that in addition to enabling the way, you must configure the authentication method itself separately. Every other authway has separate settings variables prefix. ENABLED_AUTH_WAYS : list of enabled yatb authentification ways. Defaults to: Simple (login + password) Telegram CTFTime GitHub Discord Simple prefix: AUTH_SIMPLE_ AUTH_SIMPLE_DEBUG_USERNAME : username, which will be promoted to admin, if DEBUG mode enabled AUTH_SIMPLE_MIN_PASSWORD_LEN : minimum password length AUTH_SIMPLE_MIN_USERNAME_LEN : minimum username length AUTH_SIMPLE_MAX_USERNAME_LEN : maximum username length Telegram prefix: AUTH_TG_ AUTH_TG_BOT_TOKEN : bot token AUTH_TG_BOT_USERNAME : bot public username AUTH_TG_ADMIN_USERNAMES : list of usernames, which will be promoted to admin AUTH_TG_ADMIN_UIDS : list of admin telegram IDs, which will be promoted to admin OAuth This auth way is more like an underlying auth way, and is needed as an abstraction for other auth ways. Since OAuth2 does not specify the fields in which user information is returned, it is impossible to make a universal auth way. However, almost all settings that are defined for the basic OAuth are valid for all its implementations. prefix: AUTH_OAUTH_ AUTH_OAUTH_ADMIN_IDS : user IDs, which will be promoted to admin (depending on the service) AUTH_OAUTH_CLIENT_ID : oauth client id AUTH_OAUTH_CLIENT_SECRET : oauth client secret AUTH_OAUTH_ENDPOINT : authorize endpoint AUTH_OAUTH_TOKEN_ENDPOINT : token endpoint AUTH_OAUTH_API_ENDPOINT : user info / some api endpoint OAuth: CTFTime prefix: AUTH_CTFTIME_ AUTH_CTFTIME_ADMIN_IDS : teams IDs, which users will be promoted to admin AUTH_CTFTIME_CLIENT_ID : ctftime client id AUTH_CTFTIME_CLIENT_SECRET : ctftime client secret OAuth: GitHub prefix: AUTH_GITHUB_ AUTH_GITHUB_ADMIN_IDS : user IDs, which will be promoted to admin AUTH_GITHUB_CLIENT_ID : github client id AUTH_GITHUB_CLIENT_SECRET : github client secret OAuth: Discord prefix: AUTH_DISCORD_ AUTH_DISCORD_ADMIN_IDS : user IDs, which will be promoted to admin AUTH_DISCORD_CLIENT_ID : discord client id AUTH_DISCORD_CLIENT_SECRET : discord client secret TG Notifications BOT_TOKEN - token from botfather CHAT_ID - chat id of chat for notifications (channel/group/PM) FastAPI URLs There are some params for hiding fastapi docs: FASTAPI_DOCS_URL - default swagger FASTAPI_REDOC_URL - redoc FASTAPI_OPENAPI_URL - openapi schema Monitoring MONITORING_URL - endpoint for prom metrics JWT settings JWT_ALGORITHM - jwt algo JWT_ACCESS_TOKEN_EXPIRE_MINUTES - jwt token lifetime Misc VERSION : base string, used for versing string population","title":"YATB Config"},{"location":"config/#yatb-config","text":"Setup config stored in app/config.py file","title":"YATB Config"},{"location":"config/#env","text":"Always populated from yatb.env , or from enviroment.","title":".env"},{"location":"config/#main-settings","text":"","title":"Main settings"},{"location":"config/#debug","text":"DEBUG : enable/disable debug mode. Should be off on production PROFILING : enable/disable profiling. Enables ?profile=true query param for viewing PyInstrument output","title":"Debug"},{"location":"config/#event-timing","text":"EVENT_START_TIME / EVENT_END_TIME : dates of event start and end. MUST be in UTC and offset-aware.","title":"Event timing"},{"location":"config/#db-data","text":"DB_NAME : name of database MONGO : DSN for connecting to mongodb instance","title":"DB Data"},{"location":"config/#must-be-changed","text":"JWT_SECRET_KEY - secret key for JWT cookie signing. FLAG_SIGN_KEY - the same, but for dynamic flags. API_TOKEN - token for accessing admin API without admin user / auth. WS_API_TOKEN - token for acessing admin WS subscription API.","title":"Must be changed"},{"location":"config/#ctf-customization","text":"FLAG_BASE - base for flags (i.e. part before brackets), for example: kks for flags like kks{example_flag} CTF_NAME - ctf name to be displayed on front","title":"CTF Customization"},{"location":"config/#auth-ways","text":"Note that in addition to enabling the way, you must configure the authentication method itself separately. Every other authway has separate settings variables prefix. ENABLED_AUTH_WAYS : list of enabled yatb authentification ways. Defaults to: Simple (login + password) Telegram CTFTime GitHub Discord","title":"Auth ways"},{"location":"config/#simple","text":"prefix: AUTH_SIMPLE_ AUTH_SIMPLE_DEBUG_USERNAME : username, which will be promoted to admin, if DEBUG mode enabled AUTH_SIMPLE_MIN_PASSWORD_LEN : minimum password length AUTH_SIMPLE_MIN_USERNAME_LEN : minimum username length AUTH_SIMPLE_MAX_USERNAME_LEN : maximum username length","title":"Simple"},{"location":"config/#telegram","text":"prefix: AUTH_TG_ AUTH_TG_BOT_TOKEN : bot token AUTH_TG_BOT_USERNAME : bot public username AUTH_TG_ADMIN_USERNAMES : list of usernames, which will be promoted to admin AUTH_TG_ADMIN_UIDS : list of admin telegram IDs, which will be promoted to admin","title":"Telegram"},{"location":"config/#oauth","text":"This auth way is more like an underlying auth way, and is needed as an abstraction for other auth ways. Since OAuth2 does not specify the fields in which user information is returned, it is impossible to make a universal auth way. However, almost all settings that are defined for the basic OAuth are valid for all its implementations. prefix: AUTH_OAUTH_ AUTH_OAUTH_ADMIN_IDS : user IDs, which will be promoted to admin (depending on the service) AUTH_OAUTH_CLIENT_ID : oauth client id AUTH_OAUTH_CLIENT_SECRET : oauth client secret AUTH_OAUTH_ENDPOINT : authorize endpoint AUTH_OAUTH_TOKEN_ENDPOINT : token endpoint AUTH_OAUTH_API_ENDPOINT : user info / some api endpoint","title":"OAuth"},{"location":"config/#oauth-ctftime","text":"prefix: AUTH_CTFTIME_ AUTH_CTFTIME_ADMIN_IDS : teams IDs, which users will be promoted to admin AUTH_CTFTIME_CLIENT_ID : ctftime client id AUTH_CTFTIME_CLIENT_SECRET : ctftime client secret","title":"OAuth: CTFTime"},{"location":"config/#oauth-github","text":"prefix: AUTH_GITHUB_ AUTH_GITHUB_ADMIN_IDS : user IDs, which will be promoted to admin AUTH_GITHUB_CLIENT_ID : github client id AUTH_GITHUB_CLIENT_SECRET : github client secret","title":"OAuth: GitHub"},{"location":"config/#oauth-discord","text":"prefix: AUTH_DISCORD_ AUTH_DISCORD_ADMIN_IDS : user IDs, which will be promoted to admin AUTH_DISCORD_CLIENT_ID : discord client id AUTH_DISCORD_CLIENT_SECRET : discord client secret","title":"OAuth: Discord"},{"location":"config/#tg-notifications","text":"BOT_TOKEN - token from botfather CHAT_ID - chat id of chat for notifications (channel/group/PM)","title":"TG Notifications"},{"location":"config/#fastapi-urls","text":"There are some params for hiding fastapi docs: FASTAPI_DOCS_URL - default swagger FASTAPI_REDOC_URL - redoc FASTAPI_OPENAPI_URL - openapi schema","title":"FastAPI URLs"},{"location":"config/#monitoring","text":"MONITORING_URL - endpoint for prom metrics","title":"Monitoring"},{"location":"config/#jwt-settings","text":"JWT_ALGORITHM - jwt algo JWT_ACCESS_TOKEN_EXPIRE_MINUTES - jwt token lifetime","title":"JWT settings"},{"location":"config/#misc","text":"VERSION : base string, used for versing string population","title":"Misc"},{"location":"release-notes/","text":"Release notes Latest version 0.6.3a0 Added: Forensic category to front Fake TokenAuth auth way for usage of _fake_admin_user even if SimpleAuth is disabled. It is always active auth way unhide CLI command. unhide unhides all tasks Better handling TelegramAuth while generation firstblood message rev alias for binary category api_admin_user_recalc_score endpoint api_admin_recalc_tasks endpoint Solve statistics per task in scoreboard Changed: Colorscheme a little Splitted and somewhere refactored CLI interface to many small modules, moved it inside package Migration to my ( https://github.com/Rubikoid/beanie.git@encoder-fix ) fork of beanie, because of broken upstream and unclear PR beanie!785 status Refactored api_scoreboard_get_internal* , removed copypaste Migration from nginx to caddy for serving static files - nginx broken for no reason, so migration to caddy was the simplest fix Heavily improved prepare_tasks CLI cmd Improved sorting scoreboard, make it more stable api_detele_everything is a little safer now Depricated: NGINX as static files proxy Fixed: Added few missed modules to logger Timezone while formatting time before display it in scoreboard. 0.6.2a2 Fixed: Chaotic point changes in scoreboard on flag submit 0.6.2a1 Fixed: Few fixes 0.6.2a0 Added: Ability to auth using X-Auth-Token instead of cookie Flag submission tests Beanie ODM to mongodb instead of cringe file(pickle)db MongoDB as DB in docker-compose.yml More documentation about auth ways Changed: Migrated to newest pydantic/fastapi verison (pydantic v2, yes) Refactor many things, mainly for typing or making ruff happy. Refactor logging system Some strings text sanitization Refactor some tests Use typing.Annotation for fastapi dependencies Rename some OAUTH settings to make it better-looking More documentation fixes Fixes: Some optimization in jinja formatting Optimize scoreboard generation 0.6.1 Added: Docs. Notifications about task solves in websockets (only for admin right now) Admin cleanup_db endpoint Simple predef CLI interface for API. Changed: Version enumeration: removed litera a before version. pyproject.toml refactor Add more ways to pass admin_checker dep: user in cookies, token in header, token in query Some strings sanitization a0.6.0 Added: Extended check for default tokens/keys in production mode Ressurect mode for DB during save, if docker created folder named file.db istead of normal file User delete enpoint in admin API. User password change in admin API. Extended validation for users in SimpleAuth: username len should be in [2,32], pw len should be bigger than 8 Changed: Global rework on the mechanism the models are exposed to admin/public API. Bumped reqirements.txt reqirements.txt and reqirements-dev.txt splitted to two separate files. Now for getting dev-env you have to install both Python version bumped to 3.10 Fixed: Tests","title":"Release notes"},{"location":"release-notes/#release-notes","text":"","title":"Release notes"},{"location":"release-notes/#latest-version","text":"","title":"Latest version"},{"location":"release-notes/#063a0","text":"Added: Forensic category to front Fake TokenAuth auth way for usage of _fake_admin_user even if SimpleAuth is disabled. It is always active auth way unhide CLI command. unhide unhides all tasks Better handling TelegramAuth while generation firstblood message rev alias for binary category api_admin_user_recalc_score endpoint api_admin_recalc_tasks endpoint Solve statistics per task in scoreboard Changed: Colorscheme a little Splitted and somewhere refactored CLI interface to many small modules, moved it inside package Migration to my ( https://github.com/Rubikoid/beanie.git@encoder-fix ) fork of beanie, because of broken upstream and unclear PR beanie!785 status Refactored api_scoreboard_get_internal* , removed copypaste Migration from nginx to caddy for serving static files - nginx broken for no reason, so migration to caddy was the simplest fix Heavily improved prepare_tasks CLI cmd Improved sorting scoreboard, make it more stable api_detele_everything is a little safer now Depricated: NGINX as static files proxy Fixed: Added few missed modules to logger Timezone while formatting time before display it in scoreboard.","title":"0.6.3a0"},{"location":"release-notes/#062a2","text":"Fixed: Chaotic point changes in scoreboard on flag submit","title":"0.6.2a2"},{"location":"release-notes/#062a1","text":"Fixed: Few fixes","title":"0.6.2a1"},{"location":"release-notes/#062a0","text":"Added: Ability to auth using X-Auth-Token instead of cookie Flag submission tests Beanie ODM to mongodb instead of cringe file(pickle)db MongoDB as DB in docker-compose.yml More documentation about auth ways Changed: Migrated to newest pydantic/fastapi verison (pydantic v2, yes) Refactor many things, mainly for typing or making ruff happy. Refactor logging system Some strings text sanitization Refactor some tests Use typing.Annotation for fastapi dependencies Rename some OAUTH settings to make it better-looking More documentation fixes Fixes: Some optimization in jinja formatting Optimize scoreboard generation","title":"0.6.2a0"},{"location":"release-notes/#061","text":"Added: Docs. Notifications about task solves in websockets (only for admin right now) Admin cleanup_db endpoint Simple predef CLI interface for API. Changed: Version enumeration: removed litera a before version. pyproject.toml refactor Add more ways to pass admin_checker dep: user in cookies, token in header, token in query Some strings sanitization","title":"0.6.1"},{"location":"release-notes/#a060","text":"Added: Extended check for default tokens/keys in production mode Ressurect mode for DB during save, if docker created folder named file.db istead of normal file User delete enpoint in admin API. User password change in admin API. Extended validation for users in SimpleAuth: username len should be in [2,32], pw len should be bigger than 8 Changed: Global rework on the mechanism the models are exposed to admin/public API. Bumped reqirements.txt reqirements.txt and reqirements-dev.txt splitted to two separate files. Now for getting dev-env you have to install both Python version bumped to 3.10 Fixed: Tests","title":"a0.6.0"},{"location":"hacking/","text":"Hacking YATB One of the great things about the YATB is how easily you can fix and rework it for your needs","title":"Hacking YATB"},{"location":"hacking/#hacking-yatb","text":"One of the great things about the YATB is how easily you can fix and rework it for your needs","title":"Hacking YATB"}]}